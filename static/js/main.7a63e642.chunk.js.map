{"version":3,"sources":["components/Recipes.tsx","components/Home.tsx","components/StopDropdown.tsx","components/RouteDropdown.tsx","components/DeparturesTable.tsx","components/PublicTransport.tsx","components/Theme.tsx","components/MenuBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","card","height","Recipes","classes","useState","data","setData","useEffect","a","fetch","process","response","json","alert","getJson","Container","Typography","variant","Grid","container","spacing","map","recipe","item","xs","sm","md","lg","Card","className","CardHeader","title","name","subheader","description","CardContent","color","component","ingredients","ingredient","Fragment","amount","instruction","_id","Home","StopDropdown","handleChange","React","open","setOpen","options","setOptions","stopValue","setStopValue","stopInputValue","setStopInputValue","fetchingStops","loading","length","Autocomplete","id","multiple","style","width","onOpen","onClose","getOptionSelected","option","value","getOptionLabel","renderOption","code","inputValue","onInputChange","event","newInputValue","renderInput","params","TextField","label","InputProps","endAdornment","CircularProgress","size","onChange","newValue","console","log","RouteDropdown","routeValue","setRouteValue","routeInputValue","setRouteInputValue","routeList","stop","routes","route","flatList","flat","uniqueArray","filter","pos","self","indexOf","filteredList","includes","shortName","longName","DeparturesTable","departures","setDepartures","stopParameters","gtfsId","query","join","stops","deps","forEach","stoptimesWithoutPatterns","stopTime","push","stopName","dateTime","Date","now","timestamp","Math","floor","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","departure","trip","scope","headsign","rawTime","scheduledDeparture","serviceDay","toLocaleTimeString","replaceAll","slice","PublicTransport","theme","createMuiTheme","palette","type","ThemeWrapper","children","ThemeProvider","CssBaseline","menuButton","root","background","primary","dark","MenuBar","handleDrawerClose","AppBar","position","Toolbar","IconButton","edge","onClick","Drawer","anchor","List","ListItem","button","Link","to","ListItemText","App","Theme","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a63e642.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  card: {\n    height: '250px',\n  },\n});\n\nconst Recipes = () => {\n  const classes = useStyles();\n\n  const [data, setData] = useState<any>();\n\n  const baseUrl = process.env.REACT_APP_API_URL;\n\n  useEffect(() => {\n    const getJson = async () => {\n      try {\n        const response = await fetch(`${baseUrl}api/recipes`);\n        const json = await response.json();\n        setData(json);\n      } catch (e) {\n        alert(`Error! ${e}`);\n      }\n    };\n    getJson();\n  }, []);\n\n\n\n  return (\n    <Container>\n      <Typography variant=\"h1\">Reseptit</Typography>\n      <Typography variant=\"body1\">\n        Rutkasti herkullisia reseptejä, uudessa ulkoasussa!\n      </Typography>\n      <Grid container spacing={1}>\n        {data && data.map((recipe: any) => (\n          // eslint-disable-next-line no-underscore-dangle\n          <Grid key={recipe._id} item xs={12} sm={6} md={4} lg={3}>\n            <Card className={classes.card}>\n              <CardHeader\n                title={recipe.name}\n                subheader={recipe.description}\n              />\n              <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {recipe.ingredients.map((ingredient: any) => (\n                    <React.Fragment key={ingredient.name}>\n                      <span>\n                        {ingredient.name}\n                        {' '}\n                        :\n                        {' '}\n                        {ingredient.amount}\n                      </span>\n                      <br />\n\n                    </React.Fragment>\n                  ))}\n                  {recipe.instruction}\n                </Typography>\n              </CardContent>\n\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Recipes;\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h1\">Kotiverkko 2.0</Typography>\r\n      <Typography variant=\"body1\">\r\n        Kaikki palvelut, joita kotona voi tarvita! Typescriptillä!\r\n      </Typography>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\ninterface StopDropdownProps {\r\n  handleChange: (value: any) => void;\r\n}\r\n\r\nconst StopDropdown = ({ handleChange }: StopDropdownProps) => {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState<any[]>([]);\r\n  const [stopValue, setStopValue] = React.useState<any[]>([]);\r\n  const [stopInputValue, setStopInputValue] = React.useState('');\r\n  let fetchingStops = false;\r\n  const loading = open && fetchingStops && stopInputValue.length > 2;\r\n\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  useEffect(() => {\r\n\r\n    const getJson = async () => {\r\n      fetchingStops = true;\r\n      try {\r\n        const response = await fetch(`${baseUrl}api/stops?name=${stopInputValue}`);\r\n        const json = await response.json();\r\n\r\n        setOptions(json);\r\n        fetchingStops = false;\r\n\r\n      } catch (e) {\r\n        fetchingStops = false;\r\n        alert(`Error! ${e}`);\r\n      }\r\n    };\r\n    if (stopInputValue.length === 3) {\r\n      getJson();\r\n    }\r\n    if (stopInputValue.length < 3) setOptions([]);\r\n  }, [stopInputValue]);\r\n \r\n  return (\r\n    <Autocomplete\r\n      id=\"selectstops\"\r\n      multiple\r\n      style={{ width: 300 }}\r\n      open={open}\r\n      onOpen={() => {\r\n        setOpen(true);\r\n      }}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n      getOptionSelected={(option, value) => option.name === value.name}\r\n      getOptionLabel={(option) => option.name}\r\n      renderOption={(option) => (\r\n        <>{`${option.name} (${option.code})`}</>\r\n      )}\r\n      options={options}\r\n      loading={loading}\r\n      inputValue={stopInputValue}\r\n      onInputChange={(event, newInputValue) => {\r\n        setStopInputValue(newInputValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n            // eslint-disable-next-line react/jsx-props-no-spreading\r\n          {...params}\r\n          label=\"Pysäkki\"\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n      onChange={(event: any, newValue: any | null) => {\r\n        console.log('new value is', newValue);\r\n        setStopValue(newValue);\r\n        handleChange(newValue);\r\n      }}\r\n      value={stopValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StopDropdown;\r\n","import React, { useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\ninterface RouteDropdownProps {\r\n  handleChange: (value: any) => void;\r\n  stopValue: string[];\r\n}\r\n  \r\nconst RouteDropdown = ({ handleChange, stopValue }: RouteDropdownProps) => {\r\n  const [options, setOptions] = React.useState<any[]>([]);\r\n  const [routeValue, setRouteValue] = React.useState<any[]>([]);\r\n  const [routeInputValue, setRouteInputValue] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const loading = open && options.length === 0;\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  useEffect(() => {\r\n    const getJson = async () => {\r\n\r\n      if (stopValue.length === 0) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`${baseUrl}api/routes`);\r\n        const json = await response.json();\r\n\r\n        // get a list of routes that belong to stopvalues\r\n        const routeList = stopValue.map((stop: any) => stop.routes.map((route: any) => route.id));\r\n        const flatList = routeList.flat();\r\n        const uniqueArray = flatList.filter((item: any, pos: any, self: any) =>{\r\n          return self.indexOf(item) === pos;\r\n        });\r\n        console.log(uniqueArray);\r\n        const filteredList = json.filter((route: any) => uniqueArray?.includes(route.id));\r\n        setOptions(filteredList);\r\n      } catch (e) {\r\n        alert(`Error! ${e}`);\r\n      }\r\n    };\r\n    getJson();\r\n  }, [stopValue]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"selectstops\"\r\n      multiple\r\n      style={{ width: 300 }}\r\n      open={open}\r\n      onOpen={() => {\r\n        setOpen(true);\r\n      }}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n      getOptionSelected={(option, value) => option.name === value.shortName}\r\n      getOptionLabel={(option) => option.shortName}\r\n      renderOption={(option) => (\r\n        <>{`${option.shortName} (${option.longName})`}</>\r\n      )}\r\n      options={options}\r\n      loading={loading}\r\n      inputValue={routeInputValue}\r\n      onInputChange={(event, newInputValue) => {\r\n        setRouteInputValue(newInputValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n            // eslint-disable-next-line react/jsx-props-no-spreading\r\n          {...params}\r\n          label=\"Linjat\"\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n      onChange={(event: any, newValue: any | null) => {\r\n        setRouteValue(newValue);\r\n        handleChange(newValue);\r\n      }}\r\n      value={routeValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RouteDropdown;\r\n","import React, { useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\ninterface DeparturesTableProps {\r\n  stopValue: any[];\r\n  routeValue: string[]; \r\n}\r\n    \r\nconst DeparturesTable = ({ stopValue, routeValue }: DeparturesTableProps) => {\r\n  const [departures, setDepartures] = React.useState<any[]>([]);\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  useEffect(() => {\r\n    const getJson = async () => {\r\n\r\n      if (stopValue.length === 0) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const stopParameters = stopValue.map((stop:any) => `stop=${stop.gtfsId}`);\r\n        const query = `${baseUrl}api/departures?${stopParameters.join('&')}`;\r\n        const response = await fetch(query);\r\n        const json = await response.json();\r\n        console.log(json.data.stops);\r\n        const deps: any[] = [];\r\n        json.data.stops.forEach((stop: any) => {\r\n          stop.stoptimesWithoutPatterns.forEach((stopTime: any) => {\r\n            deps.push({...stopTime, stopName: stop.name});\r\n          });\r\n        }); \r\n        setDepartures(deps.flat());\r\n      } catch (e) {\r\n        alert(`Error! ${e}`);\r\n      }\r\n\r\n    };\r\n    getJson();\r\n  }, [stopValue]);\r\n\r\n  const dateTime = Date.now();\r\n  const timestamp = Math.floor(dateTime / 1000);\r\n\r\n  const parseTime = (rawTime: number) => {\r\n    const input = new Date(rawTime * 1000);\r\n\r\n    const result = input.toLocaleTimeString();\r\n\r\n    return result.replaceAll('.', ':').slice(0, -3);\r\n  };\r\n \r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Linja</TableCell>\r\n            <TableCell align=\"right\">Pysäkki</TableCell>\r\n            <TableCell align=\"right\">Määränpää</TableCell>\r\n            <TableCell align=\"right\">Kello</TableCell>\r\n            <TableCell align=\"right\">Aikaa lähtöön</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {departures.length > 0 && departures.map((departure: any) => routeValue.length === 0 || routeValue.map((route: any) => route.shortName).includes(departure.trip.route.shortName) ? (\r\n            <TableRow key={`${departure.trip.route.shortName}${departure.scheduledDeparture}`}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {departure.trip.route.shortName}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{departure.stopName}</TableCell>\r\n              <TableCell align=\"right\">{departure.headsign}</TableCell>\r\n              <TableCell align=\"right\">{parseTime(departure.scheduledDeparture + departure.serviceDay)}</TableCell>\r\n              <TableCell align=\"right\">\r\n                {Math.floor((departure.scheduledDeparture + departure.serviceDay - timestamp) / 60)}\r\n                min\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : null,\r\n                \r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default DeparturesTable;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport StopDropdown from './StopDropdown';\r\nimport RouteDropdown from './RouteDropdown';\r\nimport DeparturesTable from './DeparturesTable';\r\n\r\nconst PublicTransport = () => {\r\n\r\n  const [stopValue, setStopValue] = React.useState<any[]>([]);\r\n  const [routeValue, setRouteValue] = React.useState<any[]>([]);\r\n \r\n  console.log('in publicTransport, stops and routes', stopValue, routeValue);\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h1\">Julkisen liikenteen yhteydet</Typography>\r\n      <StopDropdown handleChange={(value: any) => setStopValue(value)} />\r\n      {stopValue.length > 0 ? (\r\n        <RouteDropdown stopValue={stopValue} handleChange={(value: any) => setRouteValue(value)} />\r\n      ) : null }\r\n      {stopValue.length > 0 && (\r\n      <DeparturesTable stopValue={stopValue} routeValue={routeValue} />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PublicTransport;\r\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\ninterface ThemeWrapperProps {\n  children: any;\n}\n\nconst ThemeWrapper = ({ children }: ThemeWrapperProps) => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    {children}\n  </ThemeProvider>\n);\n\nexport default ThemeWrapper;\n","import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport {\r\n  Link,\r\n} from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  menuButton: {\r\n\r\n  },\r\n  title: {\r\n\r\n  },\r\n  root: {\r\n    background: theme.palette.primary.dark,\r\n  },\r\n}));\r\n\r\n  \r\nconst MenuBar = () => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleDrawerOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Kotiverkko 2.0\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer anchor=\"left\" open={open} onClose={handleDrawerClose}>\r\n        <List>\r\n          <ListItem button key=\"home\" component={Link} to=\"/\" onClick={handleDrawerClose}>\r\n            <ListItemText primary=\"Home\" />\r\n          </ListItem>\r\n          <ListItem button key=\"recipes\" component={Link} to=\"/reseptit\" onClick={handleDrawerClose}>\r\n            <ListItemText primary=\"Reseptit\" />\r\n          </ListItem>\r\n          <ListItem button key=\"publicTransport\" component={Link} to=\"/joukkoliikenne\" onClick={handleDrawerClose}>\r\n            <ListItemText primary=\"Joukkoliikenne\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport Recipes from './components/Recipes';\r\nimport Home from './components/Home';\r\nimport PublicTransport from './components/PublicTransport';\r\nimport ThemeWrapper from './components/Theme';\r\nimport MenuBar from './components/MenuBar';\r\n\r\nconst App = () => (\r\n  <ThemeWrapper>\r\n    <Router basename=\"/project\">\r\n      <MenuBar />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/reseptit\">\r\n          <Recipes />\r\n        </Route>\r\n        <Route path=\"/joukkoliikenne\">\r\n          <PublicTransport />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  </ThemeWrapper>\r\n);\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}