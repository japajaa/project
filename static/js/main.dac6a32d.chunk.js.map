{"version":3,"sources":["components/Recipes.tsx","components/Home.tsx","components/PublicTransport.tsx","components/Theme.tsx","components/MenuBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","card","height","Recipes","classes","useState","data","setData","useEffect","a","fetch","process","response","json","alert","getJson","Container","Typography","variant","Grid","container","spacing","map","recipe","item","xs","sm","md","lg","Card","className","CardHeader","title","name","subheader","description","CardContent","color","component","ingredients","ingredient","Fragment","amount","instruction","_id","Home","PublicTransport","React","open","setOpen","options","setOptions","stopValue","setStopValue","stopInputValue","setStopInputValue","openRoutes","setOpenRoutes","routeOptions","setRouteOptions","routeValue","setRouteValue","departures","setDepartures","fetchingStops","loading","length","loadingRoutes","baseUrl","routeList","stop","routes","route","id","flatList","flat","uniqueArray","filter","pos","self","indexOf","console","log","filteredList","includes","stopParameters","gtfsId","query","join","stops","deps","forEach","push","stoptimesWithoutPatterns","dateTime","Date","now","timestamp","Math","floor","parseTime","rawTime","input","getHours","getMinutes","Autocomplete","multiple","style","width","onOpen","onClose","getOptionSelected","option","value","getOptionLabel","renderOption","code","inputValue","onInputChange","event","newInputValue","renderInput","params","TextField","label","InputProps","endAdornment","CircularProgress","size","onChange","newValue","shortName","longName","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","departure","scope","trip","headsign","scheduledDeparture","serviceDay","theme","createMuiTheme","palette","type","ThemeWrapper","children","ThemeProvider","CssBaseline","menuButton","root","background","primary","dark","MenuBar","handleDrawerClose","AppBar","position","Toolbar","IconButton","edge","onClick","Drawer","anchor","List","ListItem","button","Link","to","ListItemText","App","Theme","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dac6a32d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  card: {\n    height: '250px',\n  },\n});\n\nconst Recipes = () => {\n  const classes = useStyles();\n\n  const [data, setData] = useState<any>();\n\n  const baseUrl = process.env.REACT_APP_API_URL;\n\n  useEffect(() => {\n    const getJson = async () => {\n      try {\n        const response = await fetch(`${baseUrl}api/recipes`);\n        const json = await response.json();\n        setData(json);\n      } catch (e) {\n        alert(`Error! ${e}`);\n      }\n    };\n    getJson();\n  }, []);\n\n\n\n  return (\n    <Container>\n      <Typography variant=\"h1\">Reseptit</Typography>\n      <Typography variant=\"body1\">\n        Rutkasti herkullisia reseptejä, uudessa ulkoasussa!\n      </Typography>\n      <Grid container spacing={1}>\n        {data && data.map((recipe: any) => (\n          // eslint-disable-next-line no-underscore-dangle\n          <Grid key={recipe._id} item xs={12} sm={6} md={4} lg={3}>\n            <Card className={classes.card}>\n              <CardHeader\n                title={recipe.name}\n                subheader={recipe.description}\n              />\n              <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {recipe.ingredients.map((ingredient: any) => (\n                    <React.Fragment key={ingredient.name}>\n                      <span>\n                        {ingredient.name}\n                        {' '}\n                        :\n                        {' '}\n                        {ingredient.amount}\n                      </span>\n                      <br />\n\n                    </React.Fragment>\n                  ))}\n                  {recipe.instruction}\n                </Typography>\n              </CardContent>\n\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Recipes;\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h1\">Kotiverkko 2.0</Typography>\r\n      <Typography variant=\"body1\">\r\n        Kaikki palvelut, joita kotona voi tarvita! Typescriptillä!\r\n      </Typography>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst PublicTransport = () => {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState<any[]>([]);\r\n  const [stopValue, setStopValue] = React.useState<any[]>([]);\r\n  const [stopInputValue, setStopInputValue] = React.useState('');\r\n  const [openRoutes, setOpenRoutes] = React.useState(false);\r\n  const [routeOptions, setRouteOptions] = React.useState<any[]>([]);\r\n  const [routeValue, setRouteValue] = React.useState<any | null>(null);\r\n  const [departures, setDepartures] = React.useState<any | null>(null);\r\n  let fetchingStops = false;\r\n  const loading = open && fetchingStops && stopInputValue.length > 2;\r\n  const loadingRoutes = openRoutes && routeOptions.length === 0;\r\n\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  useEffect(() => {\r\n\r\n    const getJson = async () => {\r\n      fetchingStops = true;\r\n      try {\r\n        const response = await fetch(`${baseUrl}api/stops?name=${stopInputValue}`);\r\n        const json = await response.json();\r\n\r\n        setOptions(json);\r\n        fetchingStops = false;\r\n\r\n      } catch (e) {\r\n        fetchingStops = false;\r\n        alert(`Error! ${e}`);\r\n      }\r\n    };\r\n    if (stopInputValue.length === 3) {\r\n      getJson();\r\n    }\r\n    if (stopInputValue.length < 3) setOptions([]);\r\n  }, [stopInputValue]);\r\n\r\n\r\n  useEffect(() => {\r\n    const getJson = async () => {\r\n\r\n      if (stopValue.length === 0) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`${baseUrl}api/routes`);\r\n        const json = await response.json();\r\n\r\n        // get a list of routes that belong to stopvalues\r\n        const routeList = stopValue.map((stop: any) => stop.routes.map((route: any) => route.id));\r\n        const flatList = routeList.flat();\r\n        const uniqueArray = flatList.filter((item: any, pos: any, self: any) =>{\r\n          return self.indexOf(item) === pos;\r\n        });\r\n        console.log(uniqueArray);\r\n        const filteredList = json.filter((route: any) => uniqueArray?.includes(route.id));\r\n        setRouteOptions(filteredList);\r\n      } catch (e) {\r\n        alert(`Error! ${e}`);\r\n      }\r\n\r\n      try {\r\n        const stopParameters = stopValue.map((stop:any) => `stop=${stop.gtfsId}`);\r\n        console.log(stopParameters);\r\n        const query = `${baseUrl}api/departures?${stopParameters.join('&')}`;\r\n        console.log(query);\r\n        const response = await fetch(query);\r\n        const json = await response.json();\r\n        console.log(json.data);\r\n        console.log(json.data.stops);\r\n        \r\n        const deps: any[] = [];\r\n        json.data.stops.forEach((stop: any) => { deps.push(stop.stoptimesWithoutPatterns); });\r\n        console.log(deps);\r\n        \r\n        setDepartures(deps.flat());\r\n      } catch (e) {\r\n        alert(`Error! ${e}`);\r\n      }\r\n\r\n    };\r\n    getJson();\r\n  }, [stopValue]);\r\n\r\n  const dateTime = Date.now();\r\n  const timestamp = Math.floor(dateTime / 1000);\r\n\r\n  const parseTime = (rawTime: number) => {\r\n    const input = new Date(rawTime * 1000);\r\n    const result = `${input.getHours()}:${input.getMinutes()}`;\r\n    return result;\r\n  };\r\n \r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h1\">Julkisen liikenteen yhteydet</Typography>\r\n      <Autocomplete\r\n        id=\"selectstops\"\r\n        multiple\r\n        style={{ width: 300 }}\r\n        open={open}\r\n        onOpen={() => {\r\n          setOpen(true);\r\n        }}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        getOptionSelected={(option, value) => option.name === value.name}\r\n        getOptionLabel={(option) => option.name}\r\n        renderOption={(option) => (\r\n          <>\r\n            {option.name}\r\n            {' '}\r\n            (\r\n            {option.code}\r\n            )\r\n          </>\r\n        )}\r\n        options={options}\r\n        loading={loading}\r\n        inputValue={stopInputValue}\r\n        onInputChange={(event, newInputValue) => {\r\n          setStopInputValue(newInputValue);\r\n        }}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            // eslint-disable-next-line react/jsx-props-no-spreading\r\n            {...params}\r\n            label=\"Pysäkki\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: (\r\n                <>\r\n                  {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                  {params.InputProps.endAdornment}\r\n                </>\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n        onChange={(event: any, newValue: any | null) => {\r\n          setStopValue(newValue);\r\n        }}\r\n        value={stopValue}\r\n      />\r\n      {stopValue ? (\r\n        <Autocomplete\r\n          id=\"selectroutes\"\r\n          style={{ width: 300 }}\r\n          open={openRoutes}\r\n          onOpen={() => {\r\n            setOpenRoutes(true);\r\n          }}\r\n          onClose={() => {\r\n            setOpenRoutes(false);\r\n          }}\r\n          getOptionSelected={(option, value) => option.name === value.name}\r\n          getOptionLabel={(option) => option.shortName}\r\n          renderOption={(option) => (\r\n            <>\r\n              {option.shortName}\r\n              {' '}\r\n              (\r\n              {option.longName}\r\n              )\r\n            </>\r\n          )}\r\n          options={routeOptions}\r\n          loading={loadingRoutes}\r\n          renderInput={(params) => (\r\n            <TextField\r\n            // eslint-disable-next-line react/jsx-props-no-spreading\r\n              {...params}\r\n              label=\"Linjat\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <>\r\n                    {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(event: any, newValue: any | null) => {\r\n            setRouteValue(newValue);\r\n          }}\r\n          value={routeValue}\r\n        />\r\n      ) : null }\r\n      <Typography variant=\"body1\">\r\n        Täältä näkee mikä bussi tai juna on lähdössä! T.Dösäkuski\r\n      </Typography>\r\n      {stopValue && routeValue && (\r\n        <>\r\n          <Typography variant=\"body1\">\r\n            {`Tässä näytetään tulevat lähdöt pysäkiltä ${stopValue[0].name} linjalle ${routeValue.shortName} (${routeValue.longName})`}\r\n          </Typography>\r\n          <TableContainer component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Linja</TableCell>\r\n                  <TableCell align=\"right\">Pysäkki</TableCell>\r\n                  <TableCell align=\"right\">Määränpää</TableCell>\r\n                  <TableCell align=\"right\">Kello</TableCell>\r\n                  <TableCell align=\"right\">Aikaa lähtöön</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {departures.map((departure: any) => (\r\n                  <TableRow key={`${departure.scheduledDeparture}`}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {departure.trip.route.shortName}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{stopValue[0].name}</TableCell>\r\n                    <TableCell align=\"right\">{departure.headsign}</TableCell>\r\n                    <TableCell align=\"right\">{parseTime(departure.scheduledDeparture + departure.serviceDay)}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {(departure.scheduledDeparture + departure.serviceDay - timestamp) / 60}\r\n                      min\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ),\r\n                \r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PublicTransport;\r\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\ninterface ThemeWrapperProps {\n  children: any;\n}\n\nconst ThemeWrapper = ({ children }: ThemeWrapperProps) => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    {children}\n  </ThemeProvider>\n);\n\nexport default ThemeWrapper;\n","import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport {\r\n  Link,\r\n} from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  menuButton: {\r\n\r\n  },\r\n  title: {\r\n\r\n  },\r\n  root: {\r\n    background: theme.palette.primary.dark,\r\n  },\r\n}));\r\n\r\n  \r\nconst MenuBar = () => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleDrawerOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Kotiverkko 2.0\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer anchor=\"left\" open={open} onClose={handleDrawerClose}>\r\n        <List>\r\n          <ListItem button key=\"home\" component={Link} to=\"/\" onClick={handleDrawerClose}>\r\n            <ListItemText primary=\"Home\" />\r\n          </ListItem>\r\n          <ListItem button key=\"recipes\" component={Link} to=\"/reseptit\" onClick={handleDrawerClose}>\r\n            <ListItemText primary=\"Reseptit\" />\r\n          </ListItem>\r\n          <ListItem button key=\"publicTransport\" component={Link} to=\"/joukkoliikenne\" onClick={handleDrawerClose}>\r\n            <ListItemText primary=\"Joukkoliikenne\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport Recipes from './components/Recipes';\r\nimport Home from './components/Home';\r\nimport PublicTransport from './components/PublicTransport';\r\nimport ThemeWrapper from './components/Theme';\r\nimport MenuBar from './components/MenuBar';\r\n\r\nconst App = () => (\r\n  <ThemeWrapper>\r\n    <Router basename=\"/project\">\r\n      <MenuBar />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/reseptit\">\r\n          <Recipes />\r\n        </Route>\r\n        <Route path=\"/joukkoliikenne\">\r\n          <PublicTransport />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  </ThemeWrapper>\r\n);\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}