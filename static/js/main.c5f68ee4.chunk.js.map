{"version":3,"sources":["components/Recipes.tsx","components/Home.tsx","components/PublicTransport.tsx","components/Theme.tsx","components/MenuBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","card","height","Recipes","classes","useState","data","setData","useEffect","a","fetch","process","response","json","alert","getJson","Container","Typography","variant","Grid","container","spacing","map","recipe","item","xs","sm","md","lg","Card","className","CardHeader","title","name","subheader","description","CardContent","color","component","ingredients","ingredient","Fragment","amount","instruction","_id","Home","PublicTransport","JSON","stringify","theme","createMuiTheme","palette","type","ThemeWrapper","children","ThemeProvider","menuButton","root","background","primary","dark","MenuBar","React","open","setOpen","handleDrawerClose","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","Drawer","anchor","onClose","List","ListItem","button","Link","to","ListItemText","App","Theme","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5f68ee4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  card: {\n    height: '250px',\n  },\n});\n\nconst Recipes = () => {\n  const classes = useStyles();\n\n  const [data, setData] = useState<any>();\n\n  const baseUrl = process.env.REACT_APP_API_URL;\n\n  useEffect(() => {\n    const getJson = async () => {\n      try {\n        const response = await fetch(`${baseUrl}api/recipes`);\n        const json = await response.json();\n        setData(json);\n      } catch (e) {\n        alert(`Error! ${e}`);\n      }\n    };\n    getJson();\n  }, []);\n\n\n\n  return (\n    <Container>\n      <Typography variant=\"h1\">Reseptit</Typography>\n      <Typography variant=\"body1\">\n        Rutkasti herkullisia reseptejä, uudessa ulkoasussa!\n      </Typography>\n      <Grid container spacing={1}>\n        {data && data.map((recipe: any) => (\n          // eslint-disable-next-line no-underscore-dangle\n          <Grid key={recipe._id} item xs={12} sm={6} md={4} lg={3}>\n            <Card className={classes.card}>\n              <CardHeader\n                title={recipe.name}\n                subheader={recipe.description}\n              />\n              <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {recipe.ingredients.map((ingredient: any) => (\n                    <React.Fragment key={ingredient.name}>\n                      <span>\n                        {ingredient.name}\n                        {' '}\n                        :\n                        {' '}\n                        {ingredient.amount}\n                      </span>\n                      <br />\n\n                    </React.Fragment>\n                  ))}\n                  {recipe.instruction}\n                </Typography>\n              </CardContent>\n\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Recipes;\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h1\">Kotiverkko 2.0</Typography>\r\n      <Typography variant=\"body1\">\r\n        Kaikki palvelut, joita kotona voi tarvita! Typescriptillä!\r\n      </Typography>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst PublicTransport = () => {\r\n\r\n  const [data, setData] = useState<any>();\r\n\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  useEffect(() => {\r\n    const getJson = async () => {\r\n      try {\r\n        const response = await fetch(`${baseUrl}api/departures`);\r\n        const json = await response.json();\r\n        setData(json);\r\n      } catch (e) {\r\n        alert(`Error! ${e}`);\r\n      }\r\n    };\r\n    getJson();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h1\">Julkisen liikenteen yhteydet</Typography>\r\n      <Typography variant=\"body1\">\r\n        Täältä näkee mikä bussi tai juna on lähdössä! T.Dösäkuski\r\n        <div>\r\n          {data && <span>{JSON.stringify(data)}</span>}\r\n        </div>\r\n      </Typography>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PublicTransport;\r\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\ninterface ThemeWrapperProps {\n  children: any;\n}\n\nconst ThemeWrapper = ({ children }: ThemeWrapperProps) => (\n  <ThemeProvider theme={theme}>\n    {children}\n  </ThemeProvider>\n);\n\nexport default ThemeWrapper;\n","import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport {\r\n  Link,\r\n} from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  menuButton: {\r\n\r\n  },\r\n  title: {\r\n\r\n  },\r\n  root: {\r\n    background: theme.palette.primary.dark,\r\n  },\r\n}));\r\n\r\n  \r\nconst MenuBar = () => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleDrawerOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Kotiverkko 2.0\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer anchor=\"left\" open={open} onClose={handleDrawerClose}>\r\n        <List>\r\n          <ListItem button key=\"home\" component={Link} to=\"/\" onClick={handleDrawerClose}>\r\n            <ListItemText primary=\"Home\" />\r\n          </ListItem>\r\n          <ListItem button key=\"recipes\" component={Link} to=\"/reseptit\" onClick={handleDrawerClose}>\r\n            <ListItemText primary=\"Reseptit\" />\r\n          </ListItem>\r\n          <ListItem button key=\"publicTransport\" component={Link} to=\"/joukkoliikenne\" onClick={handleDrawerClose}>\r\n            <ListItemText primary=\"Joukkoliikenne\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Recipes from './components/Recipes';\nimport Home from './components/Home';\nimport PublicTransport from './components/PublicTransport';\nimport ThemeWrapper from './components/Theme';\nimport MenuBar from './components/MenuBar';\n\nconst App = () => (\n  <ThemeWrapper>\n    <Router basename=\"/project\">\n      <MenuBar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/reseptit\">\n          <Recipes />\n        </Route>\n        <Route path=\"/joukkoliikenne\">\n          <PublicTransport />\n        </Route>\n      </Switch>\n    </Router>\n  </ThemeWrapper>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}