{"version":3,"sources":["components/Recipes.tsx","components/Home.tsx","components/PublicTransport.tsx","components/Theme.tsx","components/MenuBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","card","height","Recipes","classes","useState","data","setData","useEffect","a","fetch","process","response","json","alert","getJson","Container","Typography","variant","Grid","container","spacing","map","recipe","item","xs","sm","md","lg","Card","className","CardHeader","title","name","subheader","description","CardContent","color","component","ingredients","ingredient","Fragment","amount","instruction","_id","Home","PublicTransport","React","open","setOpen","openRoutes","setOpenRoutes","options","setOptions","routeOptions","setRouteOptions","stopValue","setStopValue","routeValue","setRouteValue","loading","length","loadingRoutes","baseUrl","reqOptions","method","headers","body","JSON","stringify","query","routeReqOptions","console","log","active","Autocomplete","id","style","width","onOpen","onClose","getOptionSelected","option","value","getOptionLabel","renderOption","code","renderInput","params","TextField","label","InputProps","endAdornment","CircularProgress","size","onChange","event","newValue","shortName","longName","theme","createMuiTheme","palette","type","ThemeWrapper","children","ThemeProvider","CssBaseline","menuButton","root","background","primary","dark","MenuBar","handleDrawerClose","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","Drawer","anchor","List","ListItem","button","Link","to","ListItemText","App","Theme","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7543e849.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  card: {\n    height: '250px',\n  },\n});\n\nconst Recipes = () => {\n  const classes = useStyles();\n\n  const [data, setData] = useState<any>();\n\n  const baseUrl = process.env.REACT_APP_API_URL;\n\n  useEffect(() => {\n    const getJson = async () => {\n      try {\n        const response = await fetch(`${baseUrl}api/recipes`);\n        const json = await response.json();\n        setData(json);\n      } catch (e) {\n        alert(`Error! ${e}`);\n      }\n    };\n    getJson();\n  }, []);\n\n\n\n  return (\n    <Container>\n      <Typography variant=\"h1\">Reseptit</Typography>\n      <Typography variant=\"body1\">\n        Rutkasti herkullisia reseptejä, uudessa ulkoasussa!\n      </Typography>\n      <Grid container spacing={1}>\n        {data && data.map((recipe: any) => (\n          // eslint-disable-next-line no-underscore-dangle\n          <Grid key={recipe._id} item xs={12} sm={6} md={4} lg={3}>\n            <Card className={classes.card}>\n              <CardHeader\n                title={recipe.name}\n                subheader={recipe.description}\n              />\n              <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {recipe.ingredients.map((ingredient: any) => (\n                    <React.Fragment key={ingredient.name}>\n                      <span>\n                        {ingredient.name}\n                        {' '}\n                        :\n                        {' '}\n                        {ingredient.amount}\n                      </span>\n                      <br />\n\n                    </React.Fragment>\n                  ))}\n                  {recipe.instruction}\n                </Typography>\n              </CardContent>\n\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Recipes;\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h1\">Kotiverkko 2.0</Typography>\r\n      <Typography variant=\"body1\">\r\n        Kaikki palvelut, joita kotona voi tarvita! Typescriptillä!\r\n      </Typography>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst PublicTransport = () => {\r\n\r\n  const [data, setData] = useState<any>();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openRoutes, setOpenRoutes] = React.useState(false);\r\n  const [options, setOptions] = React.useState<any[]>([]);\r\n  const [routeOptions, setRouteOptions] = React.useState<any[]>([]);\r\n  const [stopValue, setStopValue] = React.useState<string | null>(null);\r\n  const [routeValue, setRouteValue] = React.useState<string | null>(null);\r\n  const loading = open && options.length === 0;\r\n  const loadingRoutes = openRoutes && routeOptions.length === 0;\r\n\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  const reqData = { query: '{stops(name:\"Hertton\") {id code name routes {id}}}'};\r\n\r\n  const routeReqData = { query: '{routes {id longName shortName}}'};\r\n\r\n  // const reqData = { query: '{stop(id: \"HSL:1040129\") {id name}}'};\r\n\r\n  const reqOptions = {\r\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    body: JSON.stringify(reqData), // body data type must match \"Content-Type\" header\r\n  };\r\n\r\n  const routeReqOptions = {\r\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    body: JSON.stringify(routeReqData), // body data type must match \"Content-Type\" header\r\n  };\r\n\r\n  console.log('stopValue is', stopValue);\r\n  console.log('routeValue is', routeValue);\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return;\r\n    }\r\n    const getJson = async () => {\r\n      try {\r\n\r\n        const response = await fetch(`${baseUrl}api/stops`, reqOptions);\r\n        const json = await response.json();\r\n        if (active) {\r\n          setOptions(json);\r\n        }\r\n\r\n        setData(json);\r\n        active = false;\r\n      } catch (e) {\r\n        active = false;\r\n        alert(`Error! ${e}`);\r\n      }\r\n    };\r\n    getJson();\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loadingRoutes) {\r\n      return;\r\n    }\r\n    const getJson = async () => {\r\n      try {\r\n\r\n        const response = await fetch(`${baseUrl}api/routes`, routeReqOptions);\r\n        const json = await response.json();\r\n        if (active) {\r\n          setRouteOptions(json);\r\n        }\r\n\r\n        setData(json);\r\n        active = false;\r\n      } catch (e) {\r\n        active = false;\r\n        alert(`Error! ${e}`);\r\n      }\r\n    };\r\n    getJson();\r\n  }, [loadingRoutes]);\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h1\">Julkisen liikenteen yhteydet</Typography>\r\n      <Autocomplete\r\n        id=\"selectstops\"\r\n        style={{ width: 300 }}\r\n        open={open}\r\n        onOpen={() => {\r\n          setOpen(true);\r\n        }}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        getOptionSelected={(option, value) => option.name === value.name}\r\n        getOptionLabel={(option) => option.name}\r\n        renderOption={(option) => (\r\n          <>\r\n            {option.name}\r\n            {' '}\r\n            (\r\n            {option.code}\r\n            )\r\n          </>\r\n        )}\r\n        options={options}\r\n        loading={loading}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            // eslint-disable-next-line react/jsx-props-no-spreading\r\n            {...params}\r\n            label=\"Pysäkki\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: (\r\n                <>\r\n                  {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                  {params.InputProps.endAdornment}\r\n                </>\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n        onChange={(event: any, newValue: string | null) => {\r\n          setStopValue(newValue);\r\n        }}\r\n        value={stopValue}\r\n      />\r\n      {stopValue ? (\r\n        <Autocomplete\r\n          id=\"selectroutes\"\r\n          style={{ width: 300 }}\r\n          open={openRoutes}\r\n          onOpen={() => {\r\n            setOpenRoutes(true);\r\n          }}\r\n          onClose={() => {\r\n            setOpenRoutes(false);\r\n          }}\r\n          getOptionSelected={(option, value) => option.name === value.name}\r\n          getOptionLabel={(option) => option.shortName}\r\n          renderOption={(option) => (\r\n            <>\r\n              {option.shortName}\r\n              {' '}\r\n              (\r\n              {option.longName}\r\n              )\r\n            </>\r\n          )}\r\n          options={routeOptions}\r\n          loading={loadingRoutes}\r\n          renderInput={(params) => (\r\n            <TextField\r\n            // eslint-disable-next-line react/jsx-props-no-spreading\r\n              {...params}\r\n              label=\"Linjat\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <>\r\n                    {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n          onChange={(event: any, newValue: string | null) => {\r\n            setRouteValue(newValue);\r\n          }}\r\n          value={routeValue}\r\n        />\r\n      ) : null }\r\n      <Typography variant=\"body1\">\r\n        Täältä näkee mikä bussi tai juna on lähdössä! T.Dösäkuski\r\n        <div>\r\n          {data && <span>{JSON.stringify(data)}</span>}\r\n        </div>\r\n      </Typography>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PublicTransport;\r\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\ninterface ThemeWrapperProps {\n  children: any;\n}\n\nconst ThemeWrapper = ({ children }: ThemeWrapperProps) => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    {children}\n  </ThemeProvider>\n);\n\nexport default ThemeWrapper;\n","import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport {\r\n  Link,\r\n} from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  menuButton: {\r\n\r\n  },\r\n  title: {\r\n\r\n  },\r\n  root: {\r\n    background: theme.palette.primary.dark,\r\n  },\r\n}));\r\n\r\n  \r\nconst MenuBar = () => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleDrawerOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Kotiverkko 2.0\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer anchor=\"left\" open={open} onClose={handleDrawerClose}>\r\n        <List>\r\n          <ListItem button key=\"home\" component={Link} to=\"/\" onClick={handleDrawerClose}>\r\n            <ListItemText primary=\"Home\" />\r\n          </ListItem>\r\n          <ListItem button key=\"recipes\" component={Link} to=\"/reseptit\" onClick={handleDrawerClose}>\r\n            <ListItemText primary=\"Reseptit\" />\r\n          </ListItem>\r\n          <ListItem button key=\"publicTransport\" component={Link} to=\"/joukkoliikenne\" onClick={handleDrawerClose}>\r\n            <ListItemText primary=\"Joukkoliikenne\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport Recipes from './components/Recipes';\r\nimport Home from './components/Home';\r\nimport PublicTransport from './components/PublicTransport';\r\nimport ThemeWrapper from './components/Theme';\r\nimport MenuBar from './components/MenuBar';\r\n\r\nconst App = () => (\r\n  <ThemeWrapper>\r\n    <Router basename=\"/project\">\r\n      <MenuBar />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/reseptit\">\r\n          <Recipes />\r\n        </Route>\r\n        <Route path=\"/joukkoliikenne\">\r\n          <PublicTransport />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  </ThemeWrapper>\r\n);\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}